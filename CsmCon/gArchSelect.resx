<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ImgList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ImgList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAB6
        CgAAAk1TRnQBSQFMAgEBAwEAAXABAAFwAQABFAEAARQBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFQ
        AwABFAMAAQEBAAEgBgABGf8A/wD/AO0AAwQBBgJLAUwBjwJIAXwB8AM1AVdAAAMEAQYBSwJMAY8BSAJ8
        AfADNQFXQAADAwEEAUkBSgFJAYkBVAFcAVMB6gM1AVaMAAMVAR0CWAFbAcYCAAL/AgAC/wIOAcMB/AM5
        AV84AAMVAR0BWAJbAcYBAAP/AQAD/wEOAsMB/AM5AV84AAMTARoDVwHCAQEBRgEAAf8BAQFGAQAB/wEd
        ATwBDwH8AzgBXoQAAy4BSAJWAXQB6wIAAv8CAAL/AgAC/wIAAv8CDgHVAf0CPAE9AWgwAAMuAUgBVgJ0
        AesBAAP/AQAD/wEAA/8BAAP/AQ4C1QH9ATwCPQFoMAADLAFEAlgBVgHpAQEBRgEAAf8BAQFGAQAB/wEB
        AUYBAAH/AQEBRgEAAf8BHQFGAQ8B/QE8AT0BPAFneAADAgEDA0cBggIOAdUB/QIAAv8CAAL/AgAC/wIA
        Av8CAAL/AgAC/wIAAeMB/gNAAXEkAAMCAQMDRwGCAQ4C1QH9AQAD/wEAA/8BAAP/AQAD/wEAA/8BAAP/
        AQAC4wH+A0ABcSQAAwEBAgNFAX0BHQE8AQ8B/AEBAUYBAAH/AQEBRgEAAf8BAQFGAQAB/wEBAUYBAAH/
        AQEBRgEAAf8BAQFGAQAB/wEPAVQBAQH+A0ABcHAAAxABFgJWAVgBvAIAAv8CAAL/AgAC/wIAAv8CAAL/
        AgAC/wIAAv8CAAL/AgAC/wIAAv8DRAF7HAADEAEWAVYCWAG8AQAD/wEAA/8BAAP/AQAD/wEAA/8BAAP/
        AQAD/wEAA/8BAAP/AQAD/wNEAXscAAMPARQDVgG4AQEBRgEAAf8BAQFGAQAB/wEBAUYBAAH/AQEBRgEA
        Af8BAQFGAQAB/wEBAUYBAAH/AQEBRgEAAf8BAQFGAQAB/wEBAUYBAAH/AQEBRgEAAf8DRAF6aAADKAE9
        AlkBagHlAgAC/wIAAv8CAAL/AgAC/wIAAv8CPgGOAfQCSQGDAfECAAL/AgAC/wIAAv8CAAL/AgAC/wNI
        AYQUAAMoAT0BWQJqAeUBAAP/AQAD/wEAA/8BAAP/AQAD/wE+Ao4B9AFJAoMB8QEAA/8BAAP/AQAD/wEA
        A/8BAAP/A0gBhBQAAycBOgNYAeMBAQFGAQAB/wEBAUYBAAH/AQEBRgEAAf8BAQFGAQAB/wEBAUYBAAH/
        AUABUgE+AfQBTwFUAUkB8QEBAUYBAAH/AQEBRgEAAf8BAQFGAQAB/wEBAUYBAAH/AQEBRgEAAf8BRwFI
        AUcBg2QAAj4BjgH0AgAC/wIAAv8CAAL/AgAC/wIAAv8CWQFcAcwDFgEeAxABFgJYAVwB0QIAAv8CAAL/
        AgAC/wIAAv8CAAL/A0sBjgMAAQEMAAE+Ao4B9AEAA/8BAAP/AQAD/wEAA/8BAAP/AVkCXAHMAxYBHgMQ
        ARYBWAJcAdEBAAP/AQAD/wEAA/8BAAP/AQAD/wNLAY4DAAEBDAABQAFSAT4B9AEBAUYBAAH/AQEBRgEA
        Af8BAQFGAQAB/wEBAUYBAAH/AQEBRgEAAf8DWQHMAxYBHgMQARYDWAHRAQEBRgEAAf8BAQFGAQAB/wEB
        AUYBAAH/AQEBRgEAAf8BAQFGAQAB/wNKAY0DAAEBXAADQQFyAgAC/wIAAv8CAAL/AgAC/wJQAVEBnwMG
        AQgIAAMNARICWAFbAcsCAAL/AgAC/wIAAv8CAAL/AgAC/wJOAU8BlwMBAQIIAANBAXIBAAP/AQAD/wEA
        A/8BAAP/AVACUQGfAwYBCAgAAw0BEgFYAlsBywEAA/8BAAP/AQAD/wEAA/8BAAP/AU4CTwGXAwEBAggA
        A0EBcgEBAUYBAAH/AQEBRgEAAf8BAQFGAQAB/wEBAUYBAAH/AVABUQFQAZ8DBgEICAADDQESA1gBywEB
        AUYBAAH/AQEBRgEAAf8BAQFGAQAB/wEBAUYBAAH/AQEBRgEAAf8BTgFPAU4BlwMBAQJcAANKAYsCAAL/
        AiUBrwH5Az4BaxQAAwoBDgJZAVsBwwIAAv8CAAL/AgAC/wIAAv8CAAL/A1EBoAMCAQMIAANKAYsBAAP/
        ASUCrwH5Az4BaxQAAwoBDgFZAlsBwwEAA/8BAAP/AQAD/wEAA/8BAAP/A1EBoAMCAQMIAANKAYsBAQFG
        AQAB/wEpAUcBJgH5Az4BaxQAAwoBDgNZAcMBAQFGAQAB/wEBAUYBAAH/AQEBRgEAAf8BAQFGAQAB/wEB
        AUYBAAH/A1EBoAMCAQNbAAEBAj0BPgFqAyYBORwAAwgBCwJWAVgBvAIAAv8CAAL/AgAC/wIAAv8CAAL/
        AlIBUwGoAwQBBQcAAQEBPQI+AWoDJgE5HAADCAELAVYCWAG8AQAD/wEAA/8BAAP/AQAD/wEAA/8BUgJT
        AagDBAEFBwABAQE9AT4BPQFqAyYBORwAAwgBCwNWAbwBAQFGAQAB/wEBAUYBAAH/AQEBRgEAAf8BAQFG
        AQAB/wEBAUYBAAH/A1EBogMDAQSAAAMGAQgCVQFWAbQCAAL/AgAC/wIAAv8CAAL/AgAC/wJTAVUBrTAA
        AwYBCAFVAlYBtAEAA/8BAAP/AQAD/wEAA/8BAAP/AVMCVQGtMAADBgEIA1UBtAEBAUYBAAH/AQEBRgEA
        Af8BAQFGAQAB/wEBAUYBAAH/AQEBRgEAAf8BUQFSAVEBp4QAAwQBBgJTAVQBrAIAAv8CAAL/AgAC/wIA
        Av8CWwFkAeI0AAMEAQYBUwJUAawBAAP/AQAD/wEAA/8BAAP/AVsCZAHiNAADBAEGAVMBVAFTAawBAQFG
        AQAB/wEBAUYBAAH/AQEBRgEAAf8BAQFGAQAB/wFcAV0BWwHiiAADAwEEAlABUgGjAgAC/wIAAv8CWQFq
        AeUDHAEnOAADAwEEAVACUgGjAQAD/wEAA/8BWQJqAeUDHAEnOAADAwEEAVABUgFQAaMBAQFGAQAB/wEB
        AUYBAAH/AVsBXgFbAeUDHAEnjAADAQECAk0BTgGWAlgBZQHjAx8BLEAAAwEBAgFNAk4BlgFYAmUB4wMf
        ASxAAAMBAQIBTQFOAU0BlgNYAeMDHwEs/wD/AP8A/wAYAAFCAU0BPgcAAT4DAAEoAwABUAMAARQDAAEB
        AQABAQUAAfAXAAP/AQAH/wHwBAAH/wHwBAAH/wHwBAAB/AE/Af8BwwH/AfwBPwHwBAAB+AEfAf8BgQH/
        AfgBHwHwBAAB8AEPAf8BAAH/AfABDwHwBAABwAEHAfwBAAF/AcABBwHwBAABgAEDAfgBAAE/AYABAwHw
        BQABAQHwAQABHwEAAQEB8AYAAXABAAEHAgABcAQAAQEBgAEwARgBAwEBAYABMAQAAYcBwAEYAXwBAQGH
        AcABEAQAAY8B4AEIAf4BAAGPAeAFAAH/AfABDwH/AQAB/wHwBQAB/wH4AQ8B/wGAAf8B+AUAAf8B/AEP
        Af8BwAH/AfwFAAH/Af4BHwH/AeEB/wH+ARAEAAf/AfAEAAf/AfAEAAf/AfAEAAs=
</value>
  </data>
</root>